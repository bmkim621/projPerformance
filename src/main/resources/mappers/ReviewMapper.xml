<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yi.mapper.ReviewMapper">

	<!-- 리뷰 리스트 보기 -->
	<select id="reviewListAll" resultType="ReviewVO">
		select * from review;
	</select>
	
	<!-- 쓰기 -->
	<insert id="register" parameterType="ReviewVO">
		insert into review(review_content, review_title, review_writer, member_code) values
		(#{reviewContent}, #{reviewTitle}, #{reviewWriter}, #{memberCode})  
	</insert>
	
	<!-- 수정 -->
	<update id="update" parameterType="ReviewVO">
		update review
		set review_content = #{reviewContent}, review_title = #{reviewTitle}
		where review_no = #{reviewNo}
	</update>
	
	<!-- 삭제 -->
	<delete id="delete">
		delete from review where review_no = #{reviewNo}
	</delete>
	
	<!-- 읽기 -->
	<select id="read" resultType="ReviewVO">
		select * from review where review_no = #{reviewNo}
	</select>
	
	<!-- 후기 첨부파일 등록할 때 필요 -->
	<select id="selectLastNo" resultType="int">
		select last_insert_id()
	</select>
	
	<!-- 첨부파일 가지고 오기 -->
	<select id="getAttachList" resultType="ReviewAttachVO">
		select * from review_attach
		where review_no = #{reviewNo}
	</select>
	
	<!-- 조회수 -->
	<update id="increaseReviewViewCnt">
		update review
		set review_view_cnt = review_view_cnt + 1
		where review_no = #{reviewNo}
	</update>
	
	<!-- 페이지 -->
	<select id="listCriteria" resultType="ReviewVO">
		select * from review
		order by review_no desc
		limit #{pageStart}, #{perPageNum}
	</select>
	
	<!-- 게시물 총 갯수 -->
	<select id="totalCount" resultType="int">
		select count(review_no) from review
	</select>
	
	<!-- 검색기능 구현 -->
	<sql id="search">
		<if test="searchType == 't'.toString()">
			where review_title like CONCAT('%', #{keyword}, '%')
		</if>
		<if test="searchType == 'c'.toString()">
			where review_content like CONCAT('%', #{keyword}, '%')
		</if>
		<if test="searchType == 'w'.toString()">
			where review_writer like CONCAT('%', #{keyword}, '%')
		</if>
		<if test="searchType == 'tc'.toString()">
			where review_title like CONCAT('%', #{keyword}, '%') OR review_content like CONCAT('%', #{keyword}, '%')
		</if>
		<if test="searchType == 'cw'.toString()">
			where review_content like CONCAT('%', #{keyword}, '%') OR review_writer like CONCAT('%', #{keyword}, '%')
		</if>
		<if test="searchType == 'tcw'.toString()">
			where review_title like CONCAT('%', #{keyword}, '%')
			OR review_content like CONCAT('%', #{keyword}, '%')
			OR review_writer like CONCAT('%', #{keyword}, '%')
		</if>
	</sql>
	
	<!-- 검색 -->
	<select id="listSearch" resultType="ReviewVO">
		select * from review
		<include refid="search" />
		order by review_no desc
		limit #{pageStart}, #{perPageNum}
	</select>
	
	<!-- 검색한 게시물의  전체 갯수 -->
	<select id="searchTotalCount" resultType="int">
		select count(review_no) from review
		<include refid="search" />
	</select>
	
	<!-- 댓글수 -->
	<update id="updateReplyCnt">
		update review
		set replycnt = replycnt + #{amount}
		where review_no = #{reviewNo}
	</update>
	
	<!-- 공지사항 작성 때 필요한 값들 가져오기 -->
	<resultMap type="MemberVO" id="resultMem">
		<!-- <id column="show_code" property="showCode"/> -->
		<!-- <result column="grade_code" property="gCode.gradeCode"/>
		<result column="grade_name" property="gCode.gradeName"/>   -->
	</resultMap>       
	
	<select id="getWriter" resultMap="resultMem">                       
		select member_code, member_name, id, isMember, g.grade_code, g.grade_name
		from tbl_member left join grade g on tbl_member.grade_code = g.grade_code
		where id = #{id}    
	</select>
	
	
	<!-- 아이디 -->
	<select id="getMemberId" resultType="MemberVO">
		select * from tbl_member where member_code = #{memberCode}
	</select>
	
</mapper>